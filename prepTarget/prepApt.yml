---
# Prep new apt (debian, ubuntu) target host
#
# ansible-playbook prepApt.yml -k -K
# ansible-playbook prepApt.yml --ask-pass --ask-sudo-pass

#
# Get ssh key from target
# kill unattended upgrade
# Install Python, apt upgrade, apt cleanup
# Copy ssh-key to authorized_keys file on the target
# Install sudo
# Create 'ansible' user
# Add 'ansible' user to sudoers
# Copy ssh-key to the 'ansible' user authorized_keys


- hosts: newapt
  gather_facts: False
  
  # For Ubuntu KVM
  become: yes
  become_user: root

  tasks:
    - name: get ssh key
      delegate_to: localhost
      blockinfile:
        path: ~/.ssh/known_hosts
        create: yes
        block: "{{ lookup('pipe', 'ssh-keyscan -H ' + ansible_host + ' 2> /dev/null') }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK: {{ inventory_hostname }}"

    # Ubuntu 16.04 KVM may have an apt dpkg lock held by the unattedned-upgrade
    # which will not allow and upgrade or python install.
    # Just kill the process and ignore the error if it does not exist
    - name: kill unattended-upgrade
      raw: pkill unattended-upgr
      ignore_errors: yes

    - name: install python if needed
      raw: test -e /usr/bin/python || (apt update && apt install -y python)

    # upgrade may take some time (several minutes)
    - name: upgrade
      apt: 
        update_cache: yes
        upgrade: yes

    - name: cleanup
      apt:
        autoclean: yes
        autoremove: yes

    - name: copy ssh key to target host
      authorized_key:
        user: "{{ ansible_user }}"
        exclusive: no
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Install sudo
      apt:
        name: sudo
        state: present

    - name: Create "ansible" user
      user:
        name: ansible
        password: $6$LvTHj4o87bz50LRG$Vj.8B6.zUw.SM7DE7b9QjXAZtrUjaGXoCX1sYuBS8Zal67Gv7ibUW3TRcVXrXZSP5/LOJssFKcFI3FPEffp9g1
        shell: /bin/bash

    - name: Add user "ansible" to sudoers
      lineinfile:
        path: /etc/sudoers.d/ansible
        line: 'ansible ALL=(ALL) NOPASSWD: ALL'
        state: present
        mode: 0440
        create: yes
        validate: 'visudo -cf %s'

    - name: copy ssh key to "ansible" user authorized_keys
      authorized_key:
        user: ansible
        exclusive: no
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
